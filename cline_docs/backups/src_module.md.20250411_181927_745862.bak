# Module: src

## Purpose & Responsibility
src模块是项目的源代码目录，包含所有的应用程序代码。它负责存放项目的主要功能实现，包括TypeScript依赖处理系统的实现。

## Interfaces
* `TypeScript依赖处理系统`: 提供依赖关系管理功能
* `依赖网格操作`: 压缩、解压缩和操作依赖网格
* `键管理`: 生成和管理层次化键
* `依赖分析`: 分析项目结构和代码，识别依赖关系
* `IO操作`: 读写跟踪器文件
* Input: 项目文件和目录结构
* Output: 依赖跟踪器文件和分析结果

## Implementation Details
* Files:
  * `ts-dependency-system/`: TypeScript依赖处理系统的根目录
  * `ts-dependency-system/core/`: 核心模块，提供基础功能
  * `ts-dependency-system/utils/`: 工具模块，提供实用功能
  * `ts-dependency-system/io/`: IO模块，处理文件输入输出
  * `ts-dependency-system/analysis/`: 分析模块，处理依赖分析
  * `ts-dependency-system/bin/`: 可执行文件目录
  * `ts-dependency-system/tests/`: 测试文件目录
* Important algorithms:
  * 运行长度编码（RLE）: 用于压缩和解压缩依赖字符串
  * 层次化键生成: 为文件和目录生成上下文相关的键
  * 依赖网格验证: 验证依赖网格的一致性

## Current Implementation Status
* Completed:
  * TypeScript项目结构设置
  * 基本目录结构创建
  * 依赖项安装和配置
  * 入口文件创建
* In Progress:
  * 核心模块实现
* Pending:
  * 工具模块实现
  * IO模块实现
  * 分析模块实现
  * 命令行接口实现
  * 测试编写
  * 文档编写
  * 集成和部署

## Implementation Plans & Tasks
* `implementation_plan_typescript_dependency_system.md`
  * [设置TypeScript项目结构]: 创建项目的基本结构，包括目录、配置文件和依赖项
  * [实现核心模块]: 实现依赖网格操作、键管理和异常处理
  * [实现工具模块]: 实现路径工具、配置管理、缓存管理和批处理
  * [实现IO模块]: 实现跟踪器IO、更新文档跟踪器、更新主跟踪器和更新迷你跟踪器
  * [实现分析模块]: 实现依赖分析、依赖建议、嵌入管理和项目分析
  * [实现命令行接口]: 实现依赖处理器和命令处理函数
  * [编写测试]: 为各个模块编写单元测试和集成测试
  * [编写文档]: 编写API文档和用户指南
  * [集成和部署]: 将TypeScript实现与现有系统集成并部署

## Mini Dependency Tracker
---mini_tracker_start---

---KEY_DEFINITIONS_START---
Key Definitions:
1C: /Users/gemini/Documents/ai-infra/Cline-Recursive-Chain-of-Thought-System-CRCT-/src
---KEY_DEFINITIONS_END---

last_KEY_edit: Assigned keys: 1C
last_GRID_edit: Grid structure updated (2025-04-11T15:17:14.055334)

---GRID_START---
X 1C
1C = o
---GRID_END---

---mini_tracker_end---
